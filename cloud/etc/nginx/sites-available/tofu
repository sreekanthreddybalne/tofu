server {

    server_name tofuapp.tech;

    listen 443;  # <-

    ssl on;  # <-
    ssl_certificate /webapps/tofu/ssl/tofuapp_tech/tofuapp_tech_cert_chain.crt;  # <-
    ssl_certificate_key /webapps/tofu/ssl/tofuapp_tech/tofuapp_tech.key;  # <-

    client_max_body_size 4G;

    access_log /webapps/tofu/frontend/logs/nginx-access.log;
    error_log /webapps/tofu/frontend/logs/nginx-error.log;

    location ~ ^.*$ {

        #add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Methods' '*';
        #add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        add_header 'Access-Control-Allow-Headers' '*';

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;

        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        proxy_set_header X-Forwarded-Proto https; # <-

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        autoindex on;
        root  /webapps/tofu/frontend/dist/base;
        try_files $uri $uri/ /index.html;
    }

    # Error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /webapps/tofu/frontend/static/;
    }
}
