"""
Django settings for app_project project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import datetime
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jx1e!3oxop*$p@_0@759+f-3q9v*(479)uis8q-(3xgdx8=*si'

GOOGLE_API_KEY = "AIzaSyC7gbhCXFvCOIp3IAs3Kaco7WRZg-Jtn94"
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

SITE_ID = 2
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'app',
    'mapi',
    'api',
    'app_socket',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'corsheaders',
    'channels',
	'rest_framework',
	'rest_framework.authtoken',
    'compressor',
    'sorl.thumbnail',
    'django.contrib.sitemaps',
    'django_extensions',
    'django_filters',
    'guardian',
    'sass_processor',
]

DOMAIN = "api.doclet.in"
DOMAIN_URL = "http://"+DOMAIN

AUTH_USER_MODEL = 'app.User'
LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/login'
#Authentication backends
AUTHENTICATION_BACKENDS = (
        'app.backends.EmailOrUsernameModelBackend',
        'django.contrib.auth.backends.ModelBackend',
        'guardian.backends.ObjectPermissionBackend',
    )

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        #'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'api.jwt_utils.JWTAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': (
       'django_filters.rest_framework.DjangoFilterBackend',
    ),
    #"DATE_INPUT_FORMATS": ["%d-%m-%Y"],
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


X_FRAME_OPTIONS = 'ALLOWALL'

CORS_ORIGIN_ALLOW_ALL = True
# CORS_ORIGIN_WHITELIST = []

from corsheaders.defaults import default_headers

CORS_ALLOW_HEADERS = default_headers + (
    'HTTP_AUTHORIZATION',
)

ROOT_URLCONF = 'app_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries':{
            'app_tags': 'app.templatetags.app_tags',
            },
        },
    },
]

WSGI_APPLICATION = 'app_project.wsgi.application'

ASGI_APPLICATION = "app_project.routing.application"

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'base',
#         'USER': 'root',
#         'PASSWORD': 'COGNERIUM',
#         'HOST': '',
#         'PORT': '',
# 		'OPTIONS': {
#             'charset': 'utf8mb4',
#             'init_command': 'SET default_storage_engine=INNODB,character_set_connection=utf8mb4,collation_connection=utf8mb4_unicode_ci',
#         },
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'tofu',
        'USER': 'tofu',
        'PASSWORD': 'tofu',
        'HOST': 'localhost',
        'PORT': '',                      # Set to empty string for default.
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

JWT_AUTH = {
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'api.jwt_utils.jwt_response_payload_handler',
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=7),
}

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'


TIME_ZONE =  'Asia/Kolkata'

USE_I18N = True

USE_L10N = False

USE_TZ = True

"""
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
"""

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'


EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'sree@bidbuzz.in'
EMAIL_HOST_PASSWORD = 'D.t9676768131'
EMAIL_PORT = 587

from app.settings import COMPANY_SHORT_NAME as ds
DEFAULT_FROM_EMAIL = ds + ' <support@bidbuzz.in>'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

SASS_PROCESSOR_ROOT = os.path.join(BASE_DIR,'static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
IMAGE_UPLOAD_PATH =  'media/images/'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # other finders..
    'compressor.finders.CompressorFinder',
    'sass_processor.finders.CssFinder',
)
COMPRESS_FILTERS = {
    'css': ['compressor.filters.css_default.CssAbsoluteFilter', 'compressor.filters.cssmin.CSSMinFilter'],
    'js': ['compressor.filters.jsmin.JSMinFilter']
}
COMPRESS_ENABLED = True
COMPRESS_CSS_FILTERS = ['compressor.filters.css_default.CssAbsoluteFilter',  'compressor.filters.cssmin.CSSMinFilter']
#COMPRESS_CSS_FILTERS = ['compressor.filters.cssmin.CSSCompressorFilter']
CLOSURE_COMPILER = os.path.join('', 'app_project/closure-compiler-v20181210.jar')
COMPRESS_CLOSURE_COMPILER_BINARY = 'java -jar '+CLOSURE_COMPILER
COMPRESS_JS_FILTERS = ['compressor.filters.jsmin.JSMinFilter']

COMPRESS_STORAGE = 'compressor.storage.GzipCompressorFileStorage'
#COMPRESS_STORAGE = 'compressor.storage.BrotliCompressorFileStorage'


THUMBNAIL_FORMAT = 'PNG'


from celery.schedules import crontab
from django.utils import timezone
from datetime import timedelta

CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'
#CELERY_BROKER_URL = 'amqp://sree:D.t9676768131@0.0.0.0:5672/bidbuzz_vhost'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Kolkata'
CELERY_IGNORE_RESULT = True
CELERY_ACKS_LATE = True
CELERY_BROKER_TRANSPORT_OPTIONS = {
    'fanout_prefix': True,
    'fanout_patterns': True
}
CELERY_BEAT_SCHEDULE = {
}
